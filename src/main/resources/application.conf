akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log a few more dead letters, so patterns after "deploy noise" are a bit easier to spot in the log.
  log-dead-letters = 500

  jvm-exit-on-fatal-error = true   // crash the node if out of memory, stack overflow, etc. Probably better than trying to hang on.

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    debug {
      receive = off # whether to enable LoggingReceive
      lifecycle = off
      unhandled = on
    }
  }

  discovery {
    # initial cluster discovery. This would be replaced by appropriate methods for EC2, Kubernetes, etc.
    method = config # Just to start stuff locally.
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      bind-hostname = ${clustering.ip}
      bind-port = ${clustering.port}

      hostname = ${clustering.host_ip}
      port = ${clustering.host_port}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://"${clustering.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]
    failure-detector {
      # On AWS, we see drop-outs of up to 3 seconds regularly.
      # Akka starts logging warnings at (acceptable-heartbeat-pause / 2)
      acceptable-heartbeat-pause = 6 s
    }
  }
}

clustering {
  host_ip = ${clustering.ip}       // The IP address to announce to other nodes for reaching this one
  host_ip = ${?CLUSTER_HOST_IP}
  host_port = ${clustering.port}   // The port to announce to other nodes for reaching this one
  host_port = ${?CLUSTER_HOST_PORT}
  ip = "127.0.0.1"      // The IP address to bind akka clustering to
  ip = ${?CLUSTER_IP}
  port = 2552           // The port to bind akka clustering to
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?SEED_PORT_2552_TCP_ADDR}
  seed-port = 2552
  seed-port = ${?SEED_PORT_2552_TCP_PORT}
  name = "app-connections"
}

http {
  ip = "127.0.0.1"      // The IP address to bind HTTP to
  ip = ${?CLUSTER_IP}
  ip = ${?HTTP_IP}
  port = 8888           // The port to bind HTTP to
  port = ${?HTTP_PORT}
}
